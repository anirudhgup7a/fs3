import React, { useState } from 'react';

function App() {
  const [books, setBooks] = useState([
    { title: '1984', author: 'George Orwell' },
    { title: 'The Great Gatsby', author: 'F. Scott Fitzgerald' },
    { title: 'To Kill a Mockingbird', author: 'Harper Lee' },
  ]);

  const [searchTerm, setSearchTerm] = useState('');
  const [newTitle, setNewTitle] = useState('');
  const [newAuthor, setNewAuthor] = useState('');

  // Filter books dynamically
  const filteredBooks = books.filter(
    (book) =>
      book.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
      book.author.toLowerCase().includes(searchTerm.toLowerCase())
  );

  // Add a new book
  const handleAddBook = () => {
    if (newTitle.trim() && newAuthor.trim()) {
      setBooks([...books, { title: newTitle, author: newAuthor }]);
      setNewTitle('');
      setNewAuthor('');
    }
  };

  // Remove a book
  const handleRemoveBook = (index) => {
    setBooks(books.filter((_, i) => i !== index));
  };

  return (
    <div style={styles.container}>
      <h2 style={styles.title}>Library Management</h2>

      <input
        type="text"
        placeholder="Search by title or author"
        value={searchTerm}
        onChange={(e) => setSearchTerm(e.target.value)}
        style={styles.input}
      />

      <div style={styles.addSection}>
        <input
          type="text"
          placeholder="New book title"
          value={newTitle}
          onChange={(e) => setNewTitle(e.target.value)}
          style={styles.input}
        />
        <input
          type="text"
          placeholder="New book author"
          value={newAuthor}
          onChange={(e) => setNewAuthor(e.target.value)}
          style={styles.input}
        />
        <button onClick={handleAddBook} style={styles.button}>
          Add Book
        </button>
      </div>

      <div style={styles.bookList}>
        {filteredBooks.length > 0 ? (
          filteredBooks.map((book, index) => (
            <div key={index} style={styles.bookCard}>
              <p>
                <strong>{book.title}</strong> by {book.author}
              </p>
              <button
                onClick={() => handleRemoveBook(index)}
                style={styles.removeButton}
              >
                Remove
              </button>
            </div>
          ))
        ) : (
          <p style={styles.noBooks}>No books found</p>
        )}
      </div>
    </div>
  );
}

// Inline styles
const styles = {
  container: {
    width: '60%',
    margin: '40px auto',
    border: '1px solid #ccc',
    padding: '20px',
    borderRadius: '6px',
    backgroundColor: '#fafafa',
    fontFamily: 'Arial, sans-serif',
  },
  title: {
    textAlign: 'left',
    marginBottom: '15px',
    fontFamily: 'Georgia, serif',
  },
  input: {
    padding: '8px',
    marginRight: '8px',
    marginBottom: '10px',
    width: '200px',
    borderRadius: '4px',
    border: '1px solid #ccc',
  },
  button: {
    padding: '8px 12px',
    border: '1px solid #999',
    backgroundColor: '#f0f0f0',
    borderRadius: '4px',
    cursor: 'pointer',
  },
  addSection: {
    marginBottom: '15px',
  },
  bookList: {
    marginTop: '10px',
  },
  bookCard: {
    display: 'flex',
    justifyContent: 'space-between',
    alignItems: 'center',
    background: '#fff',
    border: '1px solid #ddd',
    padding: '10px',
    borderRadius: '4px',
    marginBottom: '8px',
  },
  removeButton: {
    padding: '6px 10px',
    backgroundColor: '#f5f5f5',
    border: '1px solid #999',
    borderRadius: '4px',
    cursor: 'pointer',
  },
  noBooks: {
    color: '#888',
    fontStyle: 'italic',
    marginTop: '15px',
  },
};

export default App;
